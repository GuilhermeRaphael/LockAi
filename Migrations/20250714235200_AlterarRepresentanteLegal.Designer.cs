// <auto-generated />
using System;
using LockAi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LockAi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250714235200_AlterarRepresentanteLegal")]
    partial class AlterarRepresentanteLegal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LockAi.Models.RepresentanteLegal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RepresentanteLegal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "12345678901",
                            Email = "mariana.alves@example.com",
                            IdUsuario = 1,
                            Nome = "Mariana Alves",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "98765432100",
                            Email = "carlos.henrique@example.com",
                            IdUsuario = 2,
                            Nome = "Carlos Henrique",
                            Telefone = "21998765432"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "45678912333",
                            Email = "fernanda.costa@example.com",
                            IdUsuario = 3,
                            Nome = "Fernanda Costa",
                            Telefone = "31934567890"
                        });
                });

            modelBuilder.Entity("LockAi.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Usuario"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Gestor"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Financeiro"
                        });
                });

            modelBuilder.Entity("LockAi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtSituacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioSituacao")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RepresentanteLegalId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepresentanteLegalId")
                        .IsUnique()
                        .HasFilter("[RepresentanteLegalId] IS NOT NULL");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "46284605874",
                            DtNascimento = new DateTime(2006, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtSituacao = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adm@gmail.com",
                            IdTipoUsuario = 2,
                            IdUsuarioSituacao = 1,
                            Login = "ADM",
                            Nome = "Admin",
                            Senha = "*123456HAS*",
                            Situacao = 1,
                            Telefone = "11971949976"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "12345678900",
                            DtNascimento = new DateTime(2010, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtSituacao = new DateTime(2025, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao.silva@example.com",
                            IdTipoUsuario = 1,
                            IdUsuarioSituacao = 1,
                            Login = "joaos",
                            Nome = "João Silva",
                            RepresentanteLegalId = 1,
                            Senha = "*senha123*",
                            Situacao = 1,
                            Telefone = "11987654321"
                        });
                });

            modelBuilder.Entity("LockAi.Models.UsuarioImagem", b =>
                {
                    b.Property<int>("IdImagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagem"));

                    b.Property<string>("EndImagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdImagem");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioImagens");
                });

            modelBuilder.Entity("LockAi.Models.Usuario", b =>
                {
                    b.HasOne("LockAi.Models.RepresentanteLegal", "RepresentanteLegal")
                        .WithOne("Usuario")
                        .HasForeignKey("LockAi.Models.Usuario", "RepresentanteLegalId");

                    b.HasOne("LockAi.Models.TipoUsuario", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId");

                    b.Navigation("RepresentanteLegal");
                });

            modelBuilder.Entity("LockAi.Models.UsuarioImagem", b =>
                {
                    b.HasOne("LockAi.Models.Usuario", null)
                        .WithMany("Imagens")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("LockAi.Models.RepresentanteLegal", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("LockAi.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LockAi.Models.Usuario", b =>
                {
                    b.Navigation("Imagens");
                });
#pragma warning restore 612, 618
        }
    }
}
