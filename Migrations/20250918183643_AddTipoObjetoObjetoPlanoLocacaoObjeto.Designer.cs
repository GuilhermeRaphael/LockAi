// <auto-generated />
using System;
using LockAi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LockAi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250918183643_AddTipoObjetoObjetoPlanoLocacaoObjeto")]
    partial class AddTipoObjetoObjetoPlanoLocacaoObjeto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LockAi.Models.Objeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtAtualizao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoObjeto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAtualizacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioInclusao")
                        .HasColumnType("int");

                    b.Property<string>("LocalidadePrimaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalidadeSecundaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalidadeTercearia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoObjeto");

                    b.ToTable("Objetos");
                });

            modelBuilder.Entity("LockAi.Models.PlanoLocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("FimLocacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuarioAtualizacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioInclusao")
                        .HasColumnType("int");

                    b.Property<string>("InicioLocacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrazoPagamento")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioAtualizacao");

                    b.HasIndex("IdUsuarioInclusao");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PlanosLocacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DtAtualizacao = new DateTime(2025, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtFim = new DateTime(2025, 10, 8, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            DtInclusao = new DateTime(2025, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtInicio = new DateTime(2025, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FimLocacao = "22:00",
                            IdUsuarioAtualizacao = 1,
                            IdUsuarioInclusao = 1,
                            InicioLocacao = "08:00",
                            Nome = "Plano Mensal Armário",
                            PrazoPagamento = 5,
                            Situacao = 1,
                            UsuarioId = 1,
                            Valor = 59.9f
                        });
                });

            modelBuilder.Entity("LockAi.Models.PlanoLocacaoObjeto", b =>
                {
                    b.Property<int>("IdPlanoLocacao")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoObjeto")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAtualizacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioInclusao")
                        .HasColumnType("int");

                    b.Property<int?>("PlanoLocacaoId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int?>("TipoObjetoId")
                        .HasColumnType("int");

                    b.HasKey("IdPlanoLocacao", "IdTipoObjeto");

                    b.HasIndex("PlanoLocacaoId");

                    b.HasIndex("TipoObjetoId");

                    b.ToTable("PlanosLocacoesObjeto");
                });

            modelBuilder.Entity("LockAi.Models.PropostaLocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtSituacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtValidade")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdObjeto")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanoLocacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioSituacao")
                        .HasColumnType("int");

                    b.Property<int>("ObjetoId")
                        .HasColumnType("int");

                    b.Property<int>("PlanoLocacaoId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ObjetoId");

                    b.HasIndex("PlanoLocacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PropostaLocacao");
                });

            modelBuilder.Entity("LockAi.Models.RepresentanteLegal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RepresentanteLegal");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "12345678901",
                            Email = "mariana.alves@example.com",
                            Nome = "Mariana Alves",
                            Telefone = "11912345678"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "98765432100",
                            Email = "carlos.henrique@example.com",
                            Nome = "Carlos Henrique",
                            Telefone = "21998765432"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "45678912333",
                            Email = "fernanda.costa@example.com",
                            Nome = "Fernanda Costa",
                            Telefone = "31934567890"
                        });
                });

            modelBuilder.Entity("LockAi.Models.Requerimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLocacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAtualizacao")
                        .HasColumnType("int");

                    b.Property<DateTime>("Momento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("TipoRequerimentoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoRequerimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Requerimentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataAtualizacao = new DateTime(2025, 8, 26, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdLocacao = 101,
                            IdUsuarioAtualizacao = 0,
                            Momento = new DateTime(2025, 8, 26, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Observacao = "Solicitação enviada pelo aluno João",
                            Situacao = 3,
                            TipoRequerimentoId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("LockAi.Models.TipoObjeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtAtualizao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuarioAtualizacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioInclusao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioAtualizacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioInclusaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioAtualizacaoId");

                    b.HasIndex("UsuarioInclusaoId");

                    b.ToTable("TiposObjeto");
                });

            modelBuilder.Entity("LockAi.Models.TipoRequerimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuarioAtualizacao")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioInclusao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioAtualizacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioInclusaoId")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioAtualizacaoId");

                    b.HasIndex("UsuarioInclusaoId");

                    b.ToTable("TiposRequerimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataAlteracao = new DateTime(2025, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInclusao = new DateTime(2025, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Solicitação para trancar matrícula do semestre",
                            IdUsuarioAtualizacao = 1,
                            IdUsuarioInclusao = 1,
                            Nome = "Trancamento de Matrícula",
                            Situacao = 0,
                            Valor = 0f
                        });
                });

            modelBuilder.Entity("LockAi.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Usuario"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Gestor"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Financeiro"
                        });
                });

            modelBuilder.Entity("LockAi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtSituacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuarioSituacao")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RepresentanteLegalId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepresentanteLegalId");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "00000000000",
                            DtNascimento = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DtSituacao = new DateTime(2025, 9, 18, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sistema@lockai.com",
                            IdUsuarioSituacao = 1,
                            Login = "sistema",
                            Nome = "Usuário do Sistema",
                            RepresentanteLegalId = 1,
                            Senha = "senha123",
                            Situacao = 1,
                            Telefone = "0000000000",
                            TipoUsuarioId = 1
                        });
                });

            modelBuilder.Entity("LockAi.Models.UsuarioImagem", b =>
                {
                    b.Property<int>("IdImagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagem"));

                    b.Property<string>("EndImagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdImagem");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioImagens");
                });

            modelBuilder.Entity("LockAi.Models.Objeto", b =>
                {
                    b.HasOne("LockAi.Models.TipoObjeto", "TipoObjeto")
                        .WithMany("Objeto")
                        .HasForeignKey("IdTipoObjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoObjeto");
                });

            modelBuilder.Entity("LockAi.Models.PlanoLocacao", b =>
                {
                    b.HasOne("LockAi.Models.Usuario", "UsuarioAtualizacao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioAtualizacao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LockAi.Models.Usuario", "UsuarioInclusao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioInclusao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LockAi.Models.Usuario", "Usuario")
                        .WithMany("PlanosLocacao")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioAtualizacao");

                    b.Navigation("UsuarioInclusao");
                });

            modelBuilder.Entity("LockAi.Models.PlanoLocacaoObjeto", b =>
                {
                    b.HasOne("LockAi.Models.PlanoLocacao", "PlanoLocacao")
                        .WithMany("PlanoLocacaoObjetos")
                        .HasForeignKey("PlanoLocacaoId");

                    b.HasOne("LockAi.Models.TipoObjeto", "TipoObjeto")
                        .WithMany("PlanoLocacaoObjetos")
                        .HasForeignKey("TipoObjetoId");

                    b.Navigation("PlanoLocacao");

                    b.Navigation("TipoObjeto");
                });

            modelBuilder.Entity("LockAi.Models.PropostaLocacao", b =>
                {
                    b.HasOne("LockAi.Models.Objeto", "Objeto")
                        .WithMany()
                        .HasForeignKey("ObjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LockAi.Models.PlanoLocacao", "PlanoLocacao")
                        .WithMany("PropostaLocacao")
                        .HasForeignKey("PlanoLocacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LockAi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto");

                    b.Navigation("PlanoLocacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LockAi.Models.Requerimento", b =>
                {
                    b.HasOne("LockAi.Models.TipoRequerimento", "TipoRequerimento")
                        .WithMany("Requerimentos")
                        .HasForeignKey("TipoRequerimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LockAi.Models.Usuario", "Usuario")
                        .WithMany("Requerimentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoRequerimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LockAi.Models.TipoObjeto", b =>
                {
                    b.HasOne("LockAi.Models.Usuario", "UsuarioAtualizacao")
                        .WithMany()
                        .HasForeignKey("UsuarioAtualizacaoId");

                    b.HasOne("LockAi.Models.Usuario", "UsuarioInclusao")
                        .WithMany()
                        .HasForeignKey("UsuarioInclusaoId");

                    b.Navigation("UsuarioAtualizacao");

                    b.Navigation("UsuarioInclusao");
                });

            modelBuilder.Entity("LockAi.Models.TipoRequerimento", b =>
                {
                    b.HasOne("LockAi.Models.Usuario", "UsuarioAtualizacao")
                        .WithMany()
                        .HasForeignKey("UsuarioAtualizacaoId");

                    b.HasOne("LockAi.Models.Usuario", "UsuarioInclusao")
                        .WithMany()
                        .HasForeignKey("UsuarioInclusaoId");

                    b.Navigation("UsuarioAtualizacao");

                    b.Navigation("UsuarioInclusao");
                });

            modelBuilder.Entity("LockAi.Models.Usuario", b =>
                {
                    b.HasOne("LockAi.Models.RepresentanteLegal", "RepresentanteLegal")
                        .WithMany("Usuarios")
                        .HasForeignKey("RepresentanteLegalId");

                    b.HasOne("LockAi.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepresentanteLegal");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("LockAi.Models.UsuarioImagem", b =>
                {
                    b.HasOne("LockAi.Models.Usuario", null)
                        .WithMany("Imagens")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("LockAi.Models.PlanoLocacao", b =>
                {
                    b.Navigation("PlanoLocacaoObjetos");

                    b.Navigation("PropostaLocacao");
                });

            modelBuilder.Entity("LockAi.Models.RepresentanteLegal", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LockAi.Models.TipoObjeto", b =>
                {
                    b.Navigation("Objeto");

                    b.Navigation("PlanoLocacaoObjetos");
                });

            modelBuilder.Entity("LockAi.Models.TipoRequerimento", b =>
                {
                    b.Navigation("Requerimentos");
                });

            modelBuilder.Entity("LockAi.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LockAi.Models.Usuario", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("PlanosLocacao");

                    b.Navigation("Requerimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
